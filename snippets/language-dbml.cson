# If you want some example snippets, check out:
# https://github.com/atom/language-javascript/blob/master/snippets/javascript.cson

'.source.dbml':
  'Project template':
    'prefix': 'project'
    'body': '''
      Project ${1:project_name} {
        database_type: ${2:'PostgreSQL'}
        Note: '${3:Description of the project}'
      }
      $0
    '''
  'Table template':
    'prefix': 'table'
    'body': '''
      Table ${1:table_name} as ${2:alias_name} {
          ${3:column_name} ${4:column_type} [${0:column_settings}]
      }
    '''
  'New table with ID':
    'description': 'Create a new table with an int id as the primary key'
    'prefix': 'tableindex'
    'body': '''
      Table ${1:name} {
        id int [pk, increment]
        ${2:column_name} ${3:column_type} [${0:column_settings}]
      }
    '''
  'Column template':
    'description': """
      The list of column settings you can use:
      - note: 'string to add notes': add a metadata note to this column
      - primary key or pk: mark a column as primary key. For composite primary key, refer to the 'Indexes' section
      - null or not null: mark a column null or not null
      - unique: mark the column unique
      - default: some_value: set a default value of the column, please refer to the 'Default Value' section below
      - increment: mark the column as auto-increment
    """
    'prefix': 'column'
    'body': """
      ${1:column_name} ${2:column_type} [$3:{column_setting}]$0
    """
  'Default value':
    'description': """
      You can set default value as:
      - number value starts blank: default: 123 or default: 123.456
      - string value starts with single quotes: default: 'some string value'
      - expression value is wrapped with parenthesis: default: `now() - interval '5 days'`
      - boolean (true/false/null): default: false or default: null
    """
    'prefix': 'defval'
    'body': """
      default: ${0:value}
    """
  'One to one relationship':
    'description': """
      Ref examples:
      - Ref name_optional: table1.column1 < table2.column2
      - Ref: merchant_periods.(merchant_id, country_code) > merchants.(id, country_code)
    """
    'prefix': 'oto',
    'body': 'Ref: ${1:table1}.${2:col1} - ${3:table2}.${4:col2} [${0:settings_optional}]'
  'One to many relationship':
    'prefix': 'otm'
    'body': 'Ref: ${1:table1}.${2:col1} < ${3:table2}.${4:col2} [${0:settings_optional}]'
  'Many to one relationship':
    'prefix': 'mto'
    'body': 'Ref: ${1:table1}.${2:col1} > ${3:table2}.${4:col2} [${0:settings_optional}]'
  'Many to many':
    'description': 'Create many-to-many relationship from 2 many-to-one relationships'
    'prefix': 'mtm'
    'body': '''
      Table ${1:name} {
        ${2:col1} int [not null, ref: > ${3:ref1}]
        ${4:col2} int [not null, ref: > ${0:ref2}]
        Indexes {
          (${2:col1}, ${4:col2}) [unique]
        }
      }
    '''
  'Project notes':
    'prefix': 'projectnote'
    'body': """
      Note: '''
          # ${1:Project_name}
          ${2:detail...}
        '''$0
    """
  'Table notes':
    'prefix': 'tablenote'
    'body': """
      Note: '${1:detail...}'$0
    """
  'Column notes':
    'prefix': 'columnnote'
    'body': """
      [note: '${1:detail}']$0
    """
  'Table group':
    'prefix': 'tablegr'
    'body': """
      TableGroup ${1:tablegroup_name} { // tablegroup is case-insensitive.
          ${2:table1}
          ${3:table2}
          ${0:table3}
      }
    """
  'Index example':
    'prefix': 'index'
    'body': """
      indexes {
            // https://www.dbml.org/docs/#index-definition
            (id, country) [pk] // composite primary key
            created_at [name: 'created_at_index', note: 'Date']
            booking_date
            (country, booking_date) [unique]
            booking_date [type: hash]
            (`id*2`)
            (`id*3`,`getdate()`)
            (`id*3`,id)
        }
    """